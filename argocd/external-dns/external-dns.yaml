#https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/pdns.md
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: external-dns-system
    server: 'https://kubernetes.default.svc'
  project: default
  sources:
    - repoURL: 'https://github.com/gigi206/k8s'
      path: argocd/external-dns/install
      targetRevision: HEAD
    - chart: external-dns
      # repoURL: 'https://charts.bitnami.com/bitnami'
      repoURL: registry-1.docker.io/bitnamicharts
      targetRevision: 8.7.3
      helm:
        parameters:
          - name: policy
            value: sync
          - name: rbac.create
            value: "true"
          # Required when crd source is enabled
          - name: crd.create
            value: "true"
          # - name: metrics.enabled
          #   value: "true"
          # Sources: https://github.com/kubernetes-sigs/external-dns/blob/master/docs/sources/sources.md
          - name: sources[0]
            value: service
          - name: sources[1]
            value: ingress
          - name: sources[2]
            value: crd
          # sources: service,ingress,node,pod,gateway-httproute,gateway-grpcroute,gateway-tlsroute,gateway-tcproute,gateway-udproute,istio-gateway,istio-virtualservice,cloudfoundry,contour-httpproxy,gloo-proxy,fake,connector,crd,empty,skipper-routegroup,openshift-route,ambassador-host,kong-tcpingress,f5-virtualserver,traefik-proxy
          # https://kubernetes-sigs.github.io/external-dns/v0.13.1/tutorials/gateway-api/
          # - name: sources[3]
          #   value: gateway-httproute
          # - name: sources[4]
          #   value: gateway-tlsroute
          # - name: sources[5]
          #   value: gateway-tcproute
          # - name: sources[6]
          #   value: gateway-udproute
          # - name: sources[7]
          #   value: gateway-grpcroute
          # https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/traefik-proxy.md
          # - name: sources[8]
          #   value: traefik-proxy
          # Providers: https://github.com/kubernetes-sigs/external-dns/tree/master/provider
          # https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/coredns.md
          - name: provider
            value: coredns
          - name: domainFilters[0]
            value: gigix
          - name: txtOwnerId
            value: external-dns
          - name: interval
            value: 15s
          - name: coredns.etcdEndpoints
            value: http://external-dns-etcd:2379
            # value: https://192.168.121.175:2379
            # value: https://etcd.kube-system:2379
          # - name: coredns.etcdTLS.enabled
          #   value: "true"
          # - name: coredns.etcdTLS.caFilename
          #   value: ca.crt
          # - name: coredns.etcdTLS.certFilename
          #   value: client.crt
          # - name: coredns.etcdTLS.keyFilename
          #   value: client.key
          # #- name: coredns.etcdTLS.autoGenerated
          # #  value: 'true'
          # - name: resources.requests.cpu
          #   value: 5m
          # - name: resources.requests.memory
          #   value: 32Mi
          # - name: resources.limits.cpu
          #   value: 10m
          # - name: resources.limits.memory
          #   value: 64Mi
          # Following arguments are for the chart https://charts.bitnami.com/bitnami
          #- name: logLevel
          #  value: debug

          # metrics
          # - name: metrics.enabled
          #   value: 'true'
          # - name: metrics.serviceMonitor.enabled
          #   value: 'true'
          # - name: metrics.serviceMonitor.labels.release
          #   value: prometheus-stack
    - chart: coredns
      repoURL: https://coredns.github.io/helm
      targetRevision: 1.39.0
      helm:
        values: |
          servers:
          - zones:
            - zone: gigix.
            port: 53
            # If serviceType is nodePort you can specify nodePort here
            # nodePort: 30053
            # hostPort: 53
            plugins:
            - name: errors
            # Serves a /health endpoint on :8080, required for livenessProbe
            - name: health
              configBlock: |-
                lameduck 5s
            # Serves a /ready endpoint on :8181, required for readinessProbe
            - name: ready
            # Serves a /metrics endpoint on :9153, required for serviceMonitor
            - name: prometheus
              parameters: 0.0.0.0:9153
            - name: cache
              parameters: 30
            # - name: forward
            #   # parameters: . 8.8.8.8
            #   parameters: . /etc/resolv.conf
            #   configBlock: |-
            #     except gigix
            - name: loop
            - name: reload
            - name: loadbalance
            # https://coredns.io/plugins/etcd/
            - name: etcd
              # parameters is the domain: example.com
              parameters: gigix
              configBlock: |-
                # stubzones
                path /skydns
                # credentials USERNAME PASSWORD
                # endpoint https://external-etcd:2379
                endpoint http://external-dns-etcd:2379
                # tls CERT KEY CACERT
        parameters:
          - name: service.annotations.io\.cilium/lb-ipam-ips
            value: 192.168.122.222
          - name: serviceType
            value: LoadBalancer
          - name: replicaCount
            value: '1'
          - name: rbac.create
            value: 'true'
          - name: isClusterService
            value: 'false'
    - chart: etcd
      # repoURL: https://charts.bitnami.com/bitnami
      repoURL: registry-1.docker.io/bitnamicharts
      # targetRevision: 11.0.6
      targetRevision: 10.7.3
      helm:
        parameters:
          - name: replicaCount
            value: '1'
          - name: auth.rbac.create
            value: 'false'
          - name: auth.rbac.allowNoneAuthentication
            value: 'true'
          # - name: auth.rbac.rootPassword
          #   value: MyPass0rd!
          # - name: auth.rbac.existingSecret
          #   value: etcd-credential
          # - name: auth.rbac.existingSecretPasswordKey
          #   value: root_passwd
          # https://etcd.io/docs/latest/op-guide/security/#basic-setup
          # - name: auth.client.secureTransport
          #   value: 'true'
          # - name: auth.client.enableAuthentication
          #   value: 'true'
          # - name: auth.client.useAutoTLS
          #   value: 'true'
          # - name: auth.client.existingSecret
          #   value: etcd-client-certs
          - name: persistence.enabled
            value: 'false'
          # - name: persistence.storageClass
          #   value: longhorn
          # - name: persistence.size
          #   value: 1Gi
          - name: pdb.create
            value: 'false'
          # https://etcd.io/docs/latest/op-guide/security/#basic-setup
          # - name: auth.client.secureTransport
          #   value: 'true'
          # - name: auth.client.enableAuthentication
          #   value: 'true'
          # - name: auth.client.certFilename
          #   value: tls.crt
          # - name: auth.client.certKeyFilename
          #   value: tls.key
          # - name: auth.client.caFilename
          #   value: ca.crt
          #- name: auth.client.useAutoTLS
          #  value: 'true'
          # - name: auth.client.existingSecret
          #   value: external-dns-crt
            # value: etcd-client-certs
    # - repoURL: https://github.com/gigi206/k8s
    #   path: argocd/external-dns/install
    #   targetRevision: HEAD
    #   directory:
    #     include: '*.yaml'
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true
      - ServerSideApply=true
      - SkipDryRunOnMissingResource=true
