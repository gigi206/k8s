apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki-stack
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: loki-stack
    name: in-cluster
    # server: 'https://kubernetes.default.svc'
  sources:
  - chart: loki-stack
    repoURL: 'https://grafana.github.io/helm-charts'
    targetRevision: '2.9.11'
    helm:
      # https://github.com/grafana/helm-charts/blob/main/charts/promtail/values.yaml
      values: |
        promtail:
          extraArgs:
            - -client.external-labels=hostname=$(HOSTNAME)
            - -config.expand-env=true
            # - --inspect
          extraVolumeMounts:
            - name: kubelet
              mountPath: /var/log/kubelet.log
              readOnly: true
            - name: journal
              mountPath: /var/log/journal
              readOnly: true
          extraVolumes:
            - name: kubelet
              hostPath:
                path: /var/lib/rancher/rke2/agent/logs/kubelet.log
            - name: journal
              hostPath:
                path: /var/log/journal
          config:
            snippets:
              # pipelineStages:
              #    - cri: {}
              # extraRelabelConfigs: []
              scrapeConfigs: |-
                # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
                - job_name: kubernetes-pods
                  pipeline_stages:
                    - cri: {}
                    # - match:
                    #     selector: '{namespace="loki-stack"}'
                    #     action: drop
                    - static_labels:
                        source: k8s
                    # - labeldrop:
                    #     - stream
                  kubernetes_sd_configs:
                    - role: pod
                  relabel_configs:
                    # - source_labels:
                    #     - __meta_kubernetes_namespace
                    #   regex: "(steam|xxx)"
                    #   action: drop
                    # Drop log for the selected namespaces
                    # - source_labels:
                    #     - __meta_kubernetes_namespace
                    #   regex: "(steam|xxx)"
                    #   action: drop
                    # Drop log if annotation or lable disable_logging is present
                    # - source_labels:
                    #     - __meta_kubernetes_pod_annotationpresent_disable_logging
                    #     - __meta_kubernetes_pod_labelpresent_disable_logging
                    #   action: drop
                    - source_labels:
                        - __meta_kubernetes_pod_controller_name
                      regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
                      action: replace
                      target_label: __tmp_controller_name
                    - source_labels:
                        - __meta_kubernetes_pod_label_app_kubernetes_io_part_of
                        - __meta_kubernetes_pod_label_app_kubernetes_io_name
                        - __meta_kubernetes_pod_label_app
                        - __tmp_controller_name
                        - __meta_kubernetes_pod_name
                      regex: ^;*([^;]+)(;.*)?$
                      action: replace
                      target_label: app
                    - source_labels:
                        - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                        - __meta_kubernetes_pod_label_instance
                      regex: ^;*([^;]+)(;.*)?$
                      action: replace
                      target_label: instance
                    - source_labels:
                        - __meta_kubernetes_pod_label_app_kubernetes_io_component
                        - __meta_kubernetes_pod_label_component
                      regex: ^;*([^;]+)(;.*)?$
                      action: replace
                      target_label: component
                    - action: replace
                      source_labels:
                      - __meta_kubernetes_pod_node_name
                      target_label: hostname
                    - action: replace
                      source_labels:
                      - __meta_kubernetes_namespace
                      target_label: namespace
                    # - action: replace
                    #   replacement: $1
                    #   separator: /
                    #   source_labels:
                    #   - namespace
                    #   - app
                    #   target_label: job
                    - action: replace
                      source_labels:
                      - __meta_kubernetes_pod_name
                      target_label: pod
                    - action: replace
                      source_labels:
                      - __meta_kubernetes_pod_container_name
                      target_label: container
                    - action: replace
                      replacement: /var/log/pods/*$1/*.log
                      separator: /
                      source_labels:
                      - __meta_kubernetes_pod_uid
                      - __meta_kubernetes_pod_container_name
                      target_label: __path__
                    - action: replace
                      regex: true/(.*)
                      replacement: /var/log/pods/*$1/*.log
                      separator: /
                      source_labels:
                      - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
                      - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
                      - __meta_kubernetes_pod_container_name
                      target_label: __path__
              extraScrapeConfigs: |-
                - job_name: kubelet
                  static_configs:
                    -  labels:
                        # __path__: /var/log/kubelet.log
                        job: k8s-kubelet
                        hostname: ${hostname}
                        source: /var/log/kubelet.log
                      # targets:
                      #   - localhost
                - job_name: journal
                  journal:
                    json: true
                    # max_age: 12h
                    path: /var/log/journal
                    # matches: _TRANSPORT=kernel
                    labels:
                      job: systemd-journal
                      hostname: ${hostname}
                      source: /var/log/journal
                  # relabel_configs:
                  #   - source_labels: ['__journal__systemd_unit']
                  #     target_label: 'systemd_unit'
                  #   # - source_labels: ['__journal__hostname']
                  #   #   target_label: 'systemd_hostname'
      parameters:
        # The actual chart (2.6.5) does not allow fine
        # configuration of the NetworkPolicy with
        # namespaceSelector to select the loki-stack namespace.
        # So install the file NetworkPolicy.yaml manually
        # - name: loki.networkPolicy.enabled
        #   value: 'true'
        - name: loki.config.compactor.retention_enabled
          value: 'true'
        # - name: loki.config.auth_enabled
        #   value: 'true'
        - name: loki.persistence.enabled
          value: 'true'
        - name: loki.persistence.storageClassName
          value: longhorn
        - name: loki.persistence.size
          value: 5Gi
        - name: promtail.enabled
          value: 'true'
        - name: promtail.readinessProbe.timeoutSeconds
          value: '5'
        - name: loki.readinessProbe.timeoutSeconds
          value: '5'
  - repoURL: 'https://github.com/gigi206/k8s'
    path: argocd/loki-stack/install
    targetRevision: HEAD
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true
      - ServerSideApply=true
