apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rook-ceph-cluster
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: rook-ceph
    name: in-cluster
    # server: 'https://kubernetes.default.svc'
  project: default
  source:
    repoURL: 'https://charts.rook.io/release'
    targetRevision: v1.9.9
    chart: rook-ceph-cluster
    helm:
      values: |
        operatorNamespace: rook-ceph
        storage:
          useAllNodes: false
          useAllDevices: false
        cephClusterSpec:
          dashboard:
            ssl: false
          mon:
            count: 1
          mgr:
            count: 1
        storage:
          nodes:
            - name: k8s-m1
              devices:
                - name: vdd
        cephFileSystemVolumeSnapshotClass:
          enabled: true
          name: ceph-filesystem
          # isDefault: true
          isDefault: false
          deletionPolicy: Delete
          annotations: {}
          labels: {}
          # see https://rook.io/docs/rook/latest/ceph-csi-snapshot.html#cephfs-snapshots for available configuration
          parameters: {}
        cephBlockPoolsVolumeSnapshotClass:
          enabled: true
          name: ceph-block
          isDefault: false
          deletionPolicy: Delete
          annotations: {}
          labels: {}
          # see https://rook.io/docs/rook/latest/ceph-csi-snapshot.html#rbd-snapshots for available configuration
          parameters: {}
        cephBlockPools:
          - name: ceph-blockpool
            # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Block-Storage/ceph-block-pool-crd.md#spec for available configuration
            spec:
              failureDomain: host
              replicated:
                size: 1
            storageClass:
              enabled: true
              name: ceph-block
              # isDefault: true
              isDefault: false
              reclaimPolicy: Delete
              allowVolumeExpansion: true
              mountOptions: []
              # see https://github.com/rook/rook/blob/master/Documentation/ceph-block.md#provision-storage for available configuration
              parameters:
                # (optional) mapOptions is a comma-separated list of map options.
                # For krbd options refer
                # https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options
                # For nbd options refer
                # https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options
                # mapOptions: lock_on_read,queue_depth=1024

                # (optional) unmapOptions is a comma-separated list of unmap options.
                # For krbd options refer
                # https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options
                # For nbd options refer
                # https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options
                # unmapOptions: force

                # RBD image format. Defaults to "2".
                imageFormat: "2"
                # RBD image features. Available for imageFormat: "2". CSI RBD currently supports only `layering` feature.
                imageFeatures: layering
                # The secrets contain Ceph admin credentials.
                csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
                csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
                csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
                csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
                csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
                csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
                # Specify the filesystem type of the volume. If not specified, csi-provisioner
                # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
                # in hyperconverged settings where the volume is mounted on the same node as the osds.
                csi.storage.k8s.io/fstype: ext4
        cephFileSystems:
          - name: ceph-filesystem
            # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#filesystem-settings for available configuration
            spec:
              metadataPool:
                replicated:
                  size: 1
              dataPools:
                - failureDomain: host
                  replicated:
                    size: 1
                  # Optional and highly recommended, 'data0' by default, see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#pools
                  name: data0
              metadataServer:
                activeCount: 1
                activeStandby: true
                resources:
                  limits:
                    cpu: "2000m"
                    memory: "4Gi"
                  requests:
                    cpu: "1000m"
                    memory: "4Gi"
                priorityClassName: system-cluster-critical
            storageClass:
              enabled: true
              isDefault: false
              name: ceph-filesystem
              # (Optional) specify a data pool to use, must be the name of one of the data pools above, 'data0' by default
              pool: data0
              reclaimPolicy: Delete
              allowVolumeExpansion: true
              mountOptions: []
              # see https://github.com/rook/rook/blob/master/Documentation/ceph-filesystem.md#provision-storage for available configuration
              parameters:
                # The secrets contain Ceph admin credentials.
                csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
                csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
                csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
                csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
                csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
                csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
                # Specify the filesystem type of the volume. If not specified, csi-provisioner
                # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
                # in hyperconverged settings where the volume is mounted on the same node as the osds.
                csi.storage.k8s.io/fstype: ext4
        cephObjectStores:
          - name: ceph-objectstore
            # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Object-Storage/ceph-object-store-crd.md#object-store-settings for available configuration
            spec:
              metadataPool:
                failureDomain: host
                replicated:
                  size: 1
              dataPool:
                failureDomain: host
                erasureCoded:
                  dataChunks: 2
                  codingChunks: 1
              preservePoolsOnDelete: true
              gateway:
                port: 80
                resources:
                  limits:
                    cpu: "2000m"
                    memory: "2Gi"
                  requests:
                    cpu: "1000m"
                    memory: "1Gi"
                # securePort: 443
                # sslCertificateRef:
                instances: 1
                priorityClassName: system-cluster-critical
              healthCheck:
                bucket:
                  interval: 60s
            storageClass:
              enabled: true
              name: ceph-bucket
              reclaimPolicy: Delete
              # see https://github.com/rook/rook/blob/master/Documentation/ceph-object-bucket-claim.md#storageclass for available configuration
              parameters:
                # note: objectStoreNamespace and objectStoreName are configured by the chart
                region: us-east-1
        monitoring:
          enabled: true
          createPrometheusRules: true
          prometheusRule:
            labels:
              release: prometheus-stack
        # Installs a debugging toolbox deployment
        toolbox:
          enabled: true
        # Ability to override ceph.conf
        configOverride: |
          [global]
          mon_allow_pool_delete = true
          osd_pool_default_size = 1
          osd_pool_default_min_size = 1
        ingress:
          dashboard:
            annotations:
              ingress.annotations.cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
              # external-dns.alpha.kubernetes.io/hostname: dashboard.example.com
              # nginx.ingress.kubernetes.io/rewrite-target: /ceph-dashboard/$2
              # If the dashboard has ssl: true the following will make sure the NGINX Ingress controller can expose the dashboard correctly
              # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
              # nginx.ingress.kubernetes.io/server-snippet: |
              #   proxy_ssl_verify off;
            host:
              name: ceph.gigix
              # path: "/ceph-dashboard(/|$)(.*)"
              path: /
            tls:
            - hosts:
                - ceph.gigix
              secretName: ceph-tls
            ingressClassName: nginx
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true
